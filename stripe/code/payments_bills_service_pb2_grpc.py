# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import payments_bills_service_pb2 as payments__bills__service__pb2


class ChargesStub(object):
  """message Invoice {
  //completar con la info de stripe
  }

  Service to manage payments
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateChargeToCustomer = channel.unary_unary(
        '/payments_bills_service.Charges/CreateChargeToCustomer',
        request_serializer=payments__bills__service__pb2.ChargeObject.SerializeToString,
        response_deserializer=payments__bills__service__pb2.GetByIdCharge.FromString,
        )
    self.CreateChargeToSource = channel.unary_unary(
        '/payments_bills_service.Charges/CreateChargeToSource',
        request_serializer=payments__bills__service__pb2.ChargeObject.SerializeToString,
        response_deserializer=payments__bills__service__pb2.GetByIdCharge.FromString,
        )
    self.GetChargeById = channel.unary_unary(
        '/payments_bills_service.Charges/GetChargeById',
        request_serializer=payments__bills__service__pb2.GetByIdCharge.SerializeToString,
        response_deserializer=payments__bills__service__pb2.GetByIdCharge.FromString,
        )
    self.GetChargeList = channel.unary_stream(
        '/payments_bills_service.Charges/GetChargeList',
        request_serializer=payments__bills__service__pb2.ListRequest.SerializeToString,
        response_deserializer=payments__bills__service__pb2.ChargeObject.FromString,
        )
    self.EditChargeById = channel.unary_unary(
        '/payments_bills_service.Charges/EditChargeById',
        request_serializer=payments__bills__service__pb2.GetByIdCharge.SerializeToString,
        response_deserializer=payments__bills__service__pb2.ChargeObject.FromString,
        )


class ChargesServicer(object):
  """message Invoice {
  //completar con la info de stripe
  }

  Service to manage payments
  """

  def CreateChargeToCustomer(self, request, context):
    """Create a charge object to charge a credit or a debit card with the customer id
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateChargeToSource(self, request, context):
    """Create a charge object to charge a credit or a debit card with a source stripe token
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetChargeById(self, request, context):
    """Get  the details of a charge that has previously been created
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetChargeList(self, request, context):
    """Returns a list of charges youâ€™ve previously created
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def EditChargeById(self, request, context):
    """Updates the specified charge by setting the values of the parameters passed
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ChargesServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateChargeToCustomer': grpc.unary_unary_rpc_method_handler(
          servicer.CreateChargeToCustomer,
          request_deserializer=payments__bills__service__pb2.ChargeObject.FromString,
          response_serializer=payments__bills__service__pb2.GetByIdCharge.SerializeToString,
      ),
      'CreateChargeToSource': grpc.unary_unary_rpc_method_handler(
          servicer.CreateChargeToSource,
          request_deserializer=payments__bills__service__pb2.ChargeObject.FromString,
          response_serializer=payments__bills__service__pb2.GetByIdCharge.SerializeToString,
      ),
      'GetChargeById': grpc.unary_unary_rpc_method_handler(
          servicer.GetChargeById,
          request_deserializer=payments__bills__service__pb2.GetByIdCharge.FromString,
          response_serializer=payments__bills__service__pb2.GetByIdCharge.SerializeToString,
      ),
      'GetChargeList': grpc.unary_stream_rpc_method_handler(
          servicer.GetChargeList,
          request_deserializer=payments__bills__service__pb2.ListRequest.FromString,
          response_serializer=payments__bills__service__pb2.ChargeObject.SerializeToString,
      ),
      'EditChargeById': grpc.unary_unary_rpc_method_handler(
          servicer.EditChargeById,
          request_deserializer=payments__bills__service__pb2.GetByIdCharge.FromString,
          response_serializer=payments__bills__service__pb2.ChargeObject.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'payments_bills_service.Charges', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class CustomersStub(object):
  """Service to manage customers
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetCustomerById = channel.unary_unary(
        '/payments_bills_service.Customers/GetCustomerById',
        request_serializer=payments__bills__service__pb2.GetByIdCharge.SerializeToString,
        response_deserializer=payments__bills__service__pb2.CustomerObject.FromString,
        )
    self.GetCustomesList = channel.unary_stream(
        '/payments_bills_service.Customers/GetCustomesList',
        request_serializer=payments__bills__service__pb2.ListRequest.SerializeToString,
        response_deserializer=payments__bills__service__pb2.CustomerObject.FromString,
        )
    self.CreateCustomer = channel.unary_unary(
        '/payments_bills_service.Customers/CreateCustomer',
        request_serializer=payments__bills__service__pb2.CustomerObject.SerializeToString,
        response_deserializer=payments__bills__service__pb2.GetByIdCharge.FromString,
        )
    self.DeleteCustomer = channel.unary_unary(
        '/payments_bills_service.Customers/DeleteCustomer',
        request_serializer=payments__bills__service__pb2.GetByIdCharge.SerializeToString,
        response_deserializer=payments__bills__service__pb2.DeleteObject.FromString,
        )


class CustomersServicer(object):
  """Service to manage customers
  """

  def GetCustomerById(self, request, context):
    """Get the details of a Customer 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCustomesList(self, request, context):
    """Get a list of the customers previously created
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateCustomer(self, request, context):
    """Create a new customer
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteCustomer(self, request, context):
    """Delete a customer previously created
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CustomersServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetCustomerById': grpc.unary_unary_rpc_method_handler(
          servicer.GetCustomerById,
          request_deserializer=payments__bills__service__pb2.GetByIdCharge.FromString,
          response_serializer=payments__bills__service__pb2.CustomerObject.SerializeToString,
      ),
      'GetCustomesList': grpc.unary_stream_rpc_method_handler(
          servicer.GetCustomesList,
          request_deserializer=payments__bills__service__pb2.ListRequest.FromString,
          response_serializer=payments__bills__service__pb2.CustomerObject.SerializeToString,
      ),
      'CreateCustomer': grpc.unary_unary_rpc_method_handler(
          servicer.CreateCustomer,
          request_deserializer=payments__bills__service__pb2.CustomerObject.FromString,
          response_serializer=payments__bills__service__pb2.GetByIdCharge.SerializeToString,
      ),
      'DeleteCustomer': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteCustomer,
          request_deserializer=payments__bills__service__pb2.GetByIdCharge.FromString,
          response_serializer=payments__bills__service__pb2.DeleteObject.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'payments_bills_service.Customers', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class SubscriptionStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetSubscriptionById = channel.unary_unary(
        '/payments_bills_service.Subscription/GetSubscriptionById',
        request_serializer=payments__bills__service__pb2.GetByIdCharge.SerializeToString,
        response_deserializer=payments__bills__service__pb2.SubscriptionsObject.FromString,
        )
    self.GetSubscriptionList = channel.unary_stream(
        '/payments_bills_service.Subscription/GetSubscriptionList',
        request_serializer=payments__bills__service__pb2.ListRequest.SerializeToString,
        response_deserializer=payments__bills__service__pb2.SubscriptionsObject.FromString,
        )
    self.CreateSubscription = channel.unary_unary(
        '/payments_bills_service.Subscription/CreateSubscription',
        request_serializer=payments__bills__service__pb2.SubscriptionsObject.SerializeToString,
        response_deserializer=payments__bills__service__pb2.SubscriptionsObject.FromString,
        )
    self.CancelSubscription = channel.unary_unary(
        '/payments_bills_service.Subscription/CancelSubscription',
        request_serializer=payments__bills__service__pb2.GetByIdCharge.SerializeToString,
        response_deserializer=payments__bills__service__pb2.ChargeObject.FromString,
        )
    self.UpdateSubscription = channel.unary_unary(
        '/payments_bills_service.Subscription/UpdateSubscription',
        request_serializer=payments__bills__service__pb2.GetByIdCharge.SerializeToString,
        response_deserializer=payments__bills__service__pb2.SubscriptionsObject.FromString,
        )


class SubscriptionServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetSubscriptionById(self, request, context):
    """Get the details of a suscription
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetSubscriptionList(self, request, context):
    """Get a listo of the descriptions previously created
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateSubscription(self, request, context):
    """Create a new suscription
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CancelSubscription(self, request, context):
    """Cancel a suscription
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateSubscription(self, request, context):
    """update a suscription
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SubscriptionServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetSubscriptionById': grpc.unary_unary_rpc_method_handler(
          servicer.GetSubscriptionById,
          request_deserializer=payments__bills__service__pb2.GetByIdCharge.FromString,
          response_serializer=payments__bills__service__pb2.SubscriptionsObject.SerializeToString,
      ),
      'GetSubscriptionList': grpc.unary_stream_rpc_method_handler(
          servicer.GetSubscriptionList,
          request_deserializer=payments__bills__service__pb2.ListRequest.FromString,
          response_serializer=payments__bills__service__pb2.SubscriptionsObject.SerializeToString,
      ),
      'CreateSubscription': grpc.unary_unary_rpc_method_handler(
          servicer.CreateSubscription,
          request_deserializer=payments__bills__service__pb2.SubscriptionsObject.FromString,
          response_serializer=payments__bills__service__pb2.SubscriptionsObject.SerializeToString,
      ),
      'CancelSubscription': grpc.unary_unary_rpc_method_handler(
          servicer.CancelSubscription,
          request_deserializer=payments__bills__service__pb2.GetByIdCharge.FromString,
          response_serializer=payments__bills__service__pb2.ChargeObject.SerializeToString,
      ),
      'UpdateSubscription': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateSubscription,
          request_deserializer=payments__bills__service__pb2.GetByIdCharge.FromString,
          response_serializer=payments__bills__service__pb2.SubscriptionsObject.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'payments_bills_service.Subscription', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class PlansStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetPlanById = channel.unary_unary(
        '/payments_bills_service.Plans/GetPlanById',
        request_serializer=payments__bills__service__pb2.GetByIdCharge.SerializeToString,
        response_deserializer=payments__bills__service__pb2.PlansObject.FromString,
        )
    self.GetPlansList = channel.unary_stream(
        '/payments_bills_service.Plans/GetPlansList',
        request_serializer=payments__bills__service__pb2.ListRequest.SerializeToString,
        response_deserializer=payments__bills__service__pb2.PlansObject.FromString,
        )


class PlansServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetPlanById(self, request, context):
    """Get a plan by ID
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetPlansList(self, request, context):
    """Get a list of created plans
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PlansServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetPlanById': grpc.unary_unary_rpc_method_handler(
          servicer.GetPlanById,
          request_deserializer=payments__bills__service__pb2.GetByIdCharge.FromString,
          response_serializer=payments__bills__service__pb2.PlansObject.SerializeToString,
      ),
      'GetPlansList': grpc.unary_stream_rpc_method_handler(
          servicer.GetPlansList,
          request_deserializer=payments__bills__service__pb2.ListRequest.FromString,
          response_serializer=payments__bills__service__pb2.PlansObject.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'payments_bills_service.Plans', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class RefoundsStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetRefoundById = channel.unary_unary(
        '/payments_bills_service.Refounds/GetRefoundById',
        request_serializer=payments__bills__service__pb2.GetByIdCharge.SerializeToString,
        response_deserializer=payments__bills__service__pb2.RefoundObject.FromString,
        )
    self.GetRefounsList = channel.unary_stream(
        '/payments_bills_service.Refounds/GetRefounsList',
        request_serializer=payments__bills__service__pb2.ListRequest.SerializeToString,
        response_deserializer=payments__bills__service__pb2.RefoundObject.FromString,
        )
    self.CreateRefound = channel.unary_unary(
        '/payments_bills_service.Refounds/CreateRefound',
        request_serializer=payments__bills__service__pb2.RefoundObject.SerializeToString,
        response_deserializer=payments__bills__service__pb2.RefoundObject.FromString,
        )


class RefoundsServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetRefoundById(self, request, context):
    """Get a Refound by ID
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetRefounsList(self, request, context):
    """get a list of refounds created
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateRefound(self, request, context):
    """create a refound
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RefoundsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetRefoundById': grpc.unary_unary_rpc_method_handler(
          servicer.GetRefoundById,
          request_deserializer=payments__bills__service__pb2.GetByIdCharge.FromString,
          response_serializer=payments__bills__service__pb2.RefoundObject.SerializeToString,
      ),
      'GetRefounsList': grpc.unary_stream_rpc_method_handler(
          servicer.GetRefounsList,
          request_deserializer=payments__bills__service__pb2.ListRequest.FromString,
          response_serializer=payments__bills__service__pb2.RefoundObject.SerializeToString,
      ),
      'CreateRefound': grpc.unary_unary_rpc_method_handler(
          servicer.CreateRefound,
          request_deserializer=payments__bills__service__pb2.RefoundObject.FromString,
          response_serializer=payments__bills__service__pb2.RefoundObject.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'payments_bills_service.Refounds', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
